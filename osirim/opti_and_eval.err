[34mINFO:   [0m Could not find any NVIDIA binaries on this host!
  0%|          | 0/4251 [00:00<?, ?it/s]  2%|▏         | 86/4251 [00:00<00:04, 857.14it/s]  4%|▎         | 152/4251 [00:00<00:05, 785.24it/s]  5%|▌         | 230/4251 [00:00<00:05, 783.09it/s]  7%|▋         | 293/4251 [00:00<00:05, 723.54it/s]  9%|▊         | 364/4251 [00:00<00:05, 718.66it/s] 10%|█         | 439/4251 [00:00<00:05, 726.72it/s] 12%|█▏        | 509/4251 [00:00<00:05, 717.61it/s] 14%|█▎        | 584/4251 [00:00<00:05, 724.12it/s] 15%|█▌        | 652/4251 [00:00<00:05, 624.08it/s] 17%|█▋        | 718/4251 [00:01<00:05, 632.73it/s] 19%|█▊        | 797/4251 [00:01<00:05, 671.50it/s] 20%|██        | 865/4251 [00:01<00:05, 661.81it/s] 22%|██▏       | 932/4251 [00:01<00:05, 652.84it/s] 24%|██▍       | 1010/4251 [00:01<00:04, 683.56it/s] 25%|██▌       | 1083/4251 [00:01<00:04, 695.42it/s] 27%|██▋       | 1153/4251 [00:01<00:04, 667.52it/s] 29%|██▊       | 1221/4251 [00:01<00:04, 652.40it/s] 30%|███       | 1291/4251 [00:01<00:04, 663.09it/s] 32%|███▏      | 1365/4251 [00:01<00:04, 682.13it/s] 34%|███▍      | 1438/4251 [00:02<00:04, 695.63it/s] 35%|███▌      | 1508/4251 [00:02<00:03, 693.87it/s] 37%|███▋      | 1581/4251 [00:02<00:03, 703.51it/s] 39%|███▉      | 1656/4251 [00:02<00:03, 715.81it/s] 41%|████      | 1734/4251 [00:02<00:03, 733.18it/s] 43%|████▎     | 1808/4251 [00:02<00:03, 724.32it/s] 44%|████▍     | 1883/4251 [00:02<00:03, 731.25it/s] 46%|████▌     | 1957/4251 [00:02<00:03, 716.66it/s] 48%|████▊     | 2030/4251 [00:02<00:03, 717.42it/s] 49%|████▉     | 2102/4251 [00:03<00:03, 706.83it/s] 51%|█████     | 2173/4251 [00:03<00:02, 699.70it/s] 53%|█████▎    | 2246/4251 [00:03<00:02, 707.31it/s] 55%|█████▍    | 2317/4251 [00:03<00:02, 707.02it/s] 56%|█████▋    | 2394/4251 [00:03<00:02, 723.43it/s] 58%|█████▊    | 2467/4251 [00:03<00:02, 713.06it/s] 60%|█████▉    | 2539/4251 [00:03<00:02, 676.00it/s] 61%|██████▏   | 2608/4251 [00:03<00:02, 653.28it/s] 63%|██████▎   | 2674/4251 [00:03<00:02, 638.06it/s] 64%|██████▍   | 2739/4251 [00:03<00:02, 633.07it/s] 66%|██████▌   | 2803/4251 [00:04<00:02, 605.16it/s] 67%|██████▋   | 2864/4251 [00:04<00:02, 598.44it/s] 69%|██████▉   | 2925/4251 [00:04<00:02, 583.88it/s] 70%|███████   | 2993/4251 [00:04<00:02, 606.94it/s] 72%|███████▏  | 3055/4251 [00:04<00:02, 585.69it/s] 73%|███████▎  | 3120/4251 [00:04<00:01, 603.40it/s] 75%|███████▍  | 3181/4251 [00:04<00:01, 595.18it/s] 77%|███████▋  | 3253/4251 [00:04<00:01, 627.56it/s] 78%|███████▊  | 3321/4251 [00:04<00:01, 639.78it/s] 80%|███████▉  | 3386/4251 [00:05<00:01, 594.94it/s] 81%|████████▏ | 3461/4251 [00:05<00:01, 633.63it/s] 83%|████████▎ | 3530/4251 [00:05<00:01, 649.02it/s] 85%|████████▍ | 3599/4251 [00:05<00:00, 658.50it/s] 86%|████████▋ | 3673/4251 [00:05<00:00, 680.00it/s] 88%|████████▊ | 3742/4251 [00:05<00:00, 651.57it/s] 90%|████████▉ | 3809/4251 [00:05<00:00, 654.41it/s] 91%|█████████ | 3875/4251 [00:05<00:00, 640.45it/s] 93%|█████████▎| 3947/4251 [00:05<00:00, 660.79it/s] 95%|█████████▍| 4027/4251 [00:05<00:00, 695.65it/s] 96%|█████████▋| 4098/4251 [00:06<00:00, 688.64it/s] 98%|█████████▊| 4168/4251 [00:06<00:00, 654.00it/s]100%|█████████▉| 4235/4251 [00:06<00:00, 648.64it/s]100%|██████████| 4251/4251 [00:06<00:00, 670.19it/s]
Traceback (most recent call last):
  File "../standalone/optimization_and_evaluation.py", line 83, in <module>
    checkpoint = torch.load(args.model_save)
  File "/users/samova/lcances/.miniconda3/envs/dcase2020/lib/python3.7/site-packages/torch/serialization.py", line 593, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "/users/samova/lcances/.miniconda3/envs/dcase2020/lib/python3.7/site-packages/torch/serialization.py", line 773, in _legacy_load
    result = unpickler.load()
  File "/users/samova/lcances/.miniconda3/envs/dcase2020/lib/python3.7/site-packages/torch/serialization.py", line 729, in persistent_load
    deserialized_objects[root_key] = restore_location(obj, location)
  File "/users/samova/lcances/.miniconda3/envs/dcase2020/lib/python3.7/site-packages/torch/serialization.py", line 178, in default_restore_location
    result = fn(storage, location)
  File "/users/samova/lcances/.miniconda3/envs/dcase2020/lib/python3.7/site-packages/torch/serialization.py", line 154, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/users/samova/lcances/.miniconda3/envs/dcase2020/lib/python3.7/site-packages/torch/serialization.py", line 138, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
srun: error: 48cpu-nc01: task 0: Exited with exit code 1
